{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATA\\\\KULIAH\\\\SMESTER 4\\\\PAK UMAM\\\\UAS\\\\latihan-nextjs\\\\pages\\\\artikel\\\\[kode].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport dummyData from '../../komponen/data.json';\n\nconst Artikel = props => {\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 2\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 2\n    }\n  }, props.judul), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 2\n    }\n  }, props.harga), \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 23\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 2\n    }\n  }, props.tanggal), \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 25\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 2\n    }\n  }, props.jam), \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 21\n    }\n  }));\n};\n\nexport async function getStaticProps(context) {\n  // cari artikel berdasarkan kode yang dikirim melalui URL\n  // alias parameter dynamic routing\n  let kode = context.params.kode;\n  let data = dummyData.find(x => x.judul == kode); // ambil judul & isi dari data hasil pencarian\n\n  let {\n    judul,\n    tanggal\n  } = data;\n  return {\n    props: {\n      // kirim judul & isi sebagai properti ke komponen utama\n      judul,\n      tanggal\n    }\n  };\n}\nexport async function getStaticPaths() {\n  return {\n    paths: [// deklarasikan kode 1, 2, & 3 sebagai parameter\n    // dynamic routing untuk path yang harus di-pre-render\n    {\n      params: {\n        kode: 'Sonic'\n      }\n    }, {\n      params: {\n        kode: 'Star Wars'\n      }\n    }, {\n      params: {\n        kode: 'Mulan'\n      }\n    }],\n    fallback: false\n  };\n}\nexport default Artikel;","map":{"version":3,"sources":["D:/DATA/KULIAH/SMESTER 4/PAK UMAM/UAS/latihan-nextjs/pages/artikel/[kode].js"],"names":["dummyData","Artikel","props","judul","harga","tanggal","jam","getStaticProps","context","kode","params","data","find","x","getStaticPaths","paths","fallback"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,0BAAtB;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAC1B,SACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBA,KAAK,CAACC,KAA7B,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACE,KAAV,CAFA,OAEqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFrB,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACG,OAAV,CAHA,OAGuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHvB,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAK,CAACI,GAAV,CAJA,OAImB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJnB,CADA;AAQA,CATD;;AAUA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAC5C;AACA;AACA,MAAIC,IAAI,GAAGD,OAAO,CAACE,MAAR,CAAeD,IAA1B;AACA,MAAIE,IAAI,GAAGX,SAAS,CAACY,IAAV,CAAeC,CAAC,IAAIA,CAAC,CAACV,KAAF,IAAWM,IAA/B,CAAX,CAJ4C,CAK5C;;AACA,MAAI;AAAEN,IAAAA,KAAF;AAASE,IAAAA;AAAT,MAAqBM,IAAzB;AACA,SAAO;AACPT,IAAAA,KAAK,EAAG;AACR;AACAC,MAAAA,KAFQ;AAEDE,MAAAA;AAFC;AADD,GAAP;AAMA;AACD,OAAO,eAAeS,cAAf,GAA+B;AACrC,SAAO;AACPC,IAAAA,KAAK,EAAG,CACR;AACA;AACA;AAACL,MAAAA,MAAM,EAAG;AAACD,QAAAA,IAAI,EAAG;AAAR;AAAV,KAHQ,EAIR;AAACC,MAAAA,MAAM,EAAG;AAACD,QAAAA,IAAI,EAAG;AAAR;AAAV,KAJQ,EAKR;AAACC,MAAAA,MAAM,EAAG;AAACD,QAAAA,IAAI,EAAG;AAAR;AAAV,KALQ,CADD;AAQPO,IAAAA,QAAQ,EAAG;AARJ,GAAP;AAUA;AACD,eAAef,OAAf","sourcesContent":["import dummyData from '../../komponen/data.json';\r\nconst Artikel = (props) => {\r\n return (\r\n <div className=\"container\">\r\n <h1 className=\"title\">{props.judul}</h1>\r\n <p>{props.harga}</p> <br/>\r\n <p>{props.tanggal}</p> <br/>\r\n <p>{props.jam}</p> <br/>\r\n </div>\r\n );\r\n}\r\nexport async function getStaticProps(context){\r\n // cari artikel berdasarkan kode yang dikirim melalui URL\r\n // alias parameter dynamic routing\r\n let kode = context.params.kode;\r\n let data = dummyData.find(x => x.judul == kode);\r\n // ambil judul & isi dari data hasil pencarian\r\n let { judul, tanggal } = data;\r\n return {\r\n props : {\r\n // kirim judul & isi sebagai properti ke komponen utama\r\n judul, tanggal\r\n }\r\n }\r\n}\r\nexport async function getStaticPaths(){\r\n return {\r\n paths : [\r\n // deklarasikan kode 1, 2, & 3 sebagai parameter\r\n // dynamic routing untuk path yang harus di-pre-render\r\n {params : {kode : 'Sonic'}},\r\n {params : {kode : 'Star Wars'}},\r\n {params : {kode : 'Mulan'}}\r\n ],\r\n fallback : false\r\n }\r\n}\r\nexport default Artikel;\r\n"]},"metadata":{},"sourceType":"module"}